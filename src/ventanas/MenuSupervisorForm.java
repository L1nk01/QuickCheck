package ventanas;

// <editor-fold defaultstate="collapsed" desc="Clases importadas">
import clases.ConsultasSQL;
import clases.MetodosBarraLateral;
import clases.MetodosBarraMenu;
import clases.MetodosBotones;
import clases.MetodosBusqueda;
import clases.MetodosComboBox;
import clases.MetodosEntrada;
import clases.MetodosFechas;
import clases.MetodosPaneles;
import clases.MetodosTextField;
import clases.MetodosValidacion;
import clases.TablaNoEditable;
import java.sql.Connection;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.border.EmptyBorder;
import javax.swing.text.MaskFormatter;
// </editor-fold>

/**
 *
 * @author ecpau
 */
public class MenuSupervisorForm extends javax.swing.JFrame {
    
    // Instancia de la conexion que se pasa del login al menu
    private Connection cn;
    
    // Usuario que inició la sesión
    private String usuario;
    
    // <editor-fold defaultstate="collapsed" desc="Instancias">
    // Instancia de la clase para añadir funcionalidad a los botones de la barra de título
    MetodosBarraMenu mbm = new MetodosBarraMenu();
    // Instancia de la clase para añadir funcionalidad a la barra lateral
    MetodosBarraLateral mbl = new MetodosBarraLateral();
    // Instancia de la clase para manipular la visibilidad de los paneles
    MetodosPaneles mp = new MetodosPaneles();
    // Instancia de la clase MetodosTextField para establecer los textos predeterminados
    MetodosTextField mtf = new MetodosTextField();
    // Instancia de la clase MetodosComboBox para obtener y configurar las opciones de los JComboBox
    MetodosComboBox mcb = new MetodosComboBox(cn);
    // Instancia de la clase MetodosBusqueda para obtener las opciones seleccionadas de los JComboBox de búsqueda
    MetodosBusqueda mb = new MetodosBusqueda();
    // Instancia de la clase MetodosValidacion para validar campos
    MetodosValidacion mv = new MetodosValidacion();
    // Instancia de la clase MetodosBotones para habilitarlos o deshabilitarlos
    MetodosBotones mbtn = new MetodosBotones();
    // Instancia de la clase MetodosFechas para trabajar con fechas en bases de datos
    MetodosFechas mf = new MetodosFechas();
    // Instancia de la clase MetodosEntrada para validar entrada en campos de texto
    MetodosEntrada me = new MetodosEntrada();
    // </editor-fold>
    
    // Variable para almacenar las coordenadas del mouse, se usa para calcular la posicion al arrastrar la ventana
    int mouseX, mouseY;
    
    /**
     * Crea una nueva instancia del formulario MenuAdminForm.
     *
     * @param cn La conexión a la base de datos que se utilizará en el formulario.
     * @param usuario El nombre completo del usuario que inició la sesión.
     */
    public MenuSupervisorForm(Connection cn, String usuario) {
        // Asigna la conexión a la base de datos al atributo de la clase
        this.cn = cn;
        
        this.usuario = usuario;
        
        // Inicializa los componentes del formulario
        initComponents();
        
        // Configura el ícono de la ventana
        ImageIcon icon = new ImageIcon(this.getClass().getResource("/quickcheck/assets/ventana/icons8-checkout-50.png"));
        this.setIconImage(icon.getImage());
        
        // Oculta los paneles de la ventana de paneles y muestra el panel del menú principal
        mp.ocultarPaneles(panelVentanaPaneles);
        panelMenuPrincipal.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuClickDerechoProductos = new javax.swing.JPopupMenu();
        btnEliminarProductos = new javax.swing.JMenuItem();
        barraTitulo = new javax.swing.JPanel();
        botonesBarraTitulo = new javax.swing.JPanel();
        contOcultar = new javax.swing.JPanel();
        lblOcultar = new javax.swing.JLabel();
        contMaximizar = new javax.swing.JPanel();
        lblMaximizar = new javax.swing.JLabel();
        contCerrar = new javax.swing.JPanel();
        lblCerrar = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JLabel();
        barraLateral = new javax.swing.JPanel();
        contBarraLateral = new javax.swing.JPanel();
        contBotonBarraLateral = new javax.swing.JPanel();
        lblBotonBarraLateral = new javax.swing.JLabel();
        contConfiguracion = new javax.swing.JPanel();
        lblConfiguracion = new javax.swing.JLabel();
        contCerrarSesion = new javax.swing.JPanel();
        lblCerrarSesion = new javax.swing.JLabel();
        panelFondo = new javax.swing.JPanel();
        panelVentana = new javax.swing.JPanel();
        panelBarraLateral = new javax.swing.JLayeredPane();
        botonProductos = new javax.swing.JPanel();
        labelProductos = new javax.swing.JLabel();
        iconoProductos = new javax.swing.JLabel();
        botonUsuarios = new javax.swing.JPanel();
        iconoUsuarios = new javax.swing.JLabel();
        labelUsuarios = new javax.swing.JLabel();
        botonDescuentos = new javax.swing.JPanel();
        labelDescuentos = new javax.swing.JLabel();
        iconoDescuentos = new javax.swing.JLabel();
        botonVentas = new javax.swing.JPanel();
        iconoVentas = new javax.swing.JLabel();
        labelVentas = new javax.swing.JLabel();
        botonInformes = new javax.swing.JPanel();
        iconoInformes = new javax.swing.JLabel();
        labelInformes = new javax.swing.JLabel();
        panelVentanaPaneles = new javax.swing.JPanel();
        panelMenuPrincipal = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        panelVentas = new javax.swing.JLayeredPane();
        panelProductos = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        txtBuscarProductos = new javax.swing.JTextField();
        comboOrdenarProductos = new javax.swing.JComboBox<>();
        comboBuscarPorProductos = new javax.swing.JComboBox<>();
        comboTipoBusquedaProductos = new javax.swing.JComboBox<>();
        panelDescuentos = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaDescuentos = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        txtNombreDescuentos = new javax.swing.JTextField();
        txtCodigoDescuentos = new javax.swing.JTextField();
        txtPorcentajeDescuentos = new javax.swing.JTextField();
        txtValorDescuentos = new javax.swing.JTextField();
        try
        {
            MaskFormatter formatoFechaInicio = new MaskFormatter("####-##-##");
            formatoFechaInicio.setPlaceholderCharacter('_');
            txtFechaInicioDescuentos = new javax.swing.JFormattedTextField(formatoFechaInicio);
            try
            {
                MaskFormatter formatoFechaFin = new MaskFormatter("####-##-##");
                formatoFechaFin.setPlaceholderCharacter('_');
                txtFechaFinDescuentos = new javax.swing.JFormattedTextField(formatoFechaFin);
                comboActivoDescuentos = new javax.swing.JComboBox<>();
                contActualizarDescuentos = new javax.swing.JPanel();
                lblActualizarDescuentos = new javax.swing.JLabel();
                contEliminarDescuentos = new javax.swing.JPanel();
                lblEliminarDescuentos = new javax.swing.JLabel();
                contRegistrarDescuentos = new javax.swing.JPanel();
                lblRegistrarDescuentos = new javax.swing.JLabel();
                contCancelarDescuentos = new javax.swing.JPanel();
                lblCancelarDescuentos = new javax.swing.JLabel();
                txtBuscarDescuentos = new javax.swing.JTextField();
                panelUsuarios = new javax.swing.JLayeredPane();
                jPanel1 = new javax.swing.JPanel();
                jLabel4 = new javax.swing.JLabel();
                jPanel6 = new javax.swing.JPanel();
                jScrollPane3 = new javax.swing.JScrollPane();
                tablaUsuarios = new javax.swing.JTable();
                txtBuscarUsuarios = new javax.swing.JTextField();
                jPanel7 = new javax.swing.JPanel();
                txtUserNameUsuarios = new javax.swing.JTextField();
                txtNombreUsuarios = new javax.swing.JTextField();
                txtEmailUsuarios = new javax.swing.JTextField();
                contEliminarUsuarios = new javax.swing.JPanel();
                lblEliminarUsuarios = new javax.swing.JLabel();
                txtClaveUsuarios = new javax.swing.JPasswordField();
                try
                {
                    MaskFormatter formatoNumeroUsuario = new MaskFormatter("+# (###) ###-####");
                    formatoNumeroUsuario.setPlaceholderCharacter('_');
                    txtNumeroUsuarios = new javax.swing.JFormattedTextField(formatoNumeroUsuario);
                    contCancelarUsuarios = new javax.swing.JPanel();
                    lblCancelarUsuarios = new javax.swing.JLabel();
                    contActualizarUsuarios = new javax.swing.JPanel();
                    lblActualizarUsuarios = new javax.swing.JLabel();
                    contRegistrarUsuarios = new javax.swing.JPanel();
                    lblRegistrarUsuarios = new javax.swing.JLabel();
                    comboNivelAccesoUsuarios = new javax.swing.JComboBox<>();
                    comboEstadoCuentaUsuarios = new javax.swing.JComboBox<>();
                    panelInformes = new javax.swing.JLayeredPane();
                    jPanel10 = new javax.swing.JPanel();
                    jLabel5 = new javax.swing.JLabel();
                    jPanel11 = new javax.swing.JPanel();
                    comboMonthInformes = new javax.swing.JComboBox<>();
                    comboPeriodoInformes = new javax.swing.JComboBox<>();
                    comboYearInformes = new javax.swing.JComboBox<>();
                    jScrollPane5 = new javax.swing.JScrollPane();
                    tablaInformes = new javax.swing.JTable();
                    comboTipoInformes = new javax.swing.JComboBox<>();

                    btnEliminarProductos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    btnEliminarProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/productos/icons8-delete-25.png"))); // NOI18N
                    btnEliminarProductos.setText("Eliminar");
                    btnEliminarProductos.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btnEliminarProductosActionPerformed(evt);
                        }
                    });
                    menuClickDerechoProductos.add(btnEliminarProductos);

                    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                    setUndecorated(true);
                    addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                            formMousePressed(evt);
                        }
                    });

                    barraTitulo.setBackground(new java.awt.Color(87, 154, 233));
                    barraTitulo.setPreferredSize(new java.awt.Dimension(1280, 50));
                    barraTitulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                            barraTituloMouseDragged(evt);
                        }
                    });
                    barraTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            barraTituloMouseClicked(evt);
                        }
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                            barraTituloMousePressed(evt);
                        }
                    });
                    barraTitulo.setLayout(new java.awt.BorderLayout());

                    botonesBarraTitulo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    contOcultar.setBackground(new java.awt.Color(87, 154, 233));
                    contOcultar.setLayout(new java.awt.BorderLayout());

                    lblOcultar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblOcultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/barra_titulo/icons8-minimize-20-white.png"))); // NOI18N
                    lblOcultar.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblOcultarMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblOcultarMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblOcultarMouseExited(evt);
                        }
                    });
                    contOcultar.add(lblOcultar, java.awt.BorderLayout.CENTER);

                    botonesBarraTitulo.add(contOcultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 50));

                    contMaximizar.setBackground(new java.awt.Color(87, 154, 233));
                    contMaximizar.setLayout(new java.awt.BorderLayout());

                    lblMaximizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblMaximizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/barra_titulo/icons8-rectangle-20-white.png"))); // NOI18N
                    lblMaximizar.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblMaximizarMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblMaximizarMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblMaximizarMouseExited(evt);
                        }
                    });
                    contMaximizar.add(lblMaximizar, java.awt.BorderLayout.CENTER);

                    botonesBarraTitulo.add(contMaximizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 60, 50));

                    contCerrar.setBackground(new java.awt.Color(87, 154, 233));
                    contCerrar.setLayout(new java.awt.BorderLayout());

                    lblCerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/barra_titulo/icons8-close-20-white.png"))); // NOI18N
                    lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblCerrarMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblCerrarMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblCerrarMouseExited(evt);
                        }
                    });
                    contCerrar.add(lblCerrar, java.awt.BorderLayout.CENTER);

                    botonesBarraTitulo.add(contCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 60, 50));

                    barraTitulo.add(botonesBarraTitulo, java.awt.BorderLayout.EAST);

                    txtTitulo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
                    txtTitulo.setForeground(new java.awt.Color(255, 255, 255));
                    txtTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/barra_titulo/icons8-checkout-35.png"))); // NOI18N
                    txtTitulo.setText("    QuickCheck (Administrador)");
                    txtTitulo.setBorder(new EmptyBorder(0, 16, 0, 0));
                    barraTitulo.add(txtTitulo, java.awt.BorderLayout.CENTER);

                    getContentPane().add(barraTitulo, java.awt.BorderLayout.PAGE_START);

                    barraLateral.setBackground(new java.awt.Color(56, 33, 165));
                    barraLateral.setPreferredSize(new java.awt.Dimension(70, 670));
                    barraLateral.setLayout(new java.awt.BorderLayout());

                    contBarraLateral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    contBotonBarraLateral.setBackground(new java.awt.Color(56, 33, 165));

                    lblBotonBarraLateral.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblBotonBarraLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-menu-30-white.png"))); // NOI18N
                    lblBotonBarraLateral.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblBotonBarraLateralMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblBotonBarraLateralMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblBotonBarraLateralMouseExited(evt);
                        }
                    });

                    javax.swing.GroupLayout contBotonBarraLateralLayout = new javax.swing.GroupLayout(contBotonBarraLateral);
                    contBotonBarraLateral.setLayout(contBotonBarraLateralLayout);
                    contBotonBarraLateralLayout.setHorizontalGroup(
                        contBotonBarraLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contBotonBarraLateralLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(lblBotonBarraLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    );
                    contBotonBarraLateralLayout.setVerticalGroup(
                        contBotonBarraLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contBotonBarraLateralLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(lblBotonBarraLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    );

                    contBarraLateral.add(contBotonBarraLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 70));

                    contConfiguracion.setBackground(new java.awt.Color(56, 33, 165));
                    contConfiguracion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    lblConfiguracion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-settings-30-white.png"))); // NOI18N
                    lblConfiguracion.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblConfiguracionMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblConfiguracionMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblConfiguracionMouseExited(evt);
                        }
                    });
                    contConfiguracion.add(lblConfiguracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 70));

                    contBarraLateral.add(contConfiguracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 70, 70));

                    barraLateral.add(contBarraLateral, java.awt.BorderLayout.NORTH);

                    contCerrarSesion.setBackground(new java.awt.Color(56, 33, 165));

                    lblCerrarSesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    lblCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-sign-out-30-white.png"))); // NOI18N
                    lblCerrarSesion.setPreferredSize(new java.awt.Dimension(70, 70));
                    lblCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            lblCerrarSesionMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            lblCerrarSesionMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            lblCerrarSesionMouseExited(evt);
                        }
                    });

                    javax.swing.GroupLayout contCerrarSesionLayout = new javax.swing.GroupLayout(contCerrarSesion);
                    contCerrarSesion.setLayout(contCerrarSesionLayout);
                    contCerrarSesionLayout.setHorizontalGroup(
                        contCerrarSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contCerrarSesionLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(lblCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    );
                    contCerrarSesionLayout.setVerticalGroup(
                        contCerrarSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contCerrarSesionLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(lblCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    );

                    barraLateral.add(contCerrarSesion, java.awt.BorderLayout.PAGE_END);

                    getContentPane().add(barraLateral, java.awt.BorderLayout.LINE_START);

                    panelFondo.setBackground(new java.awt.Color(255, 255, 255));

                    panelBarraLateral.setBackground(new java.awt.Color(54, 33, 150));
                    panelBarraLateral.setOpaque(true);
                    panelBarraLateral.setPreferredSize(new java.awt.Dimension(0, 670));

                    botonProductos.setBackground(new java.awt.Color(54, 33, 150));
                    botonProductos.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            botonProductosMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            botonProductosMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            botonProductosMouseExited(evt);
                        }
                    });
                    botonProductos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    labelProductos.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
                    labelProductos.setForeground(new java.awt.Color(255, 255, 255));
                    labelProductos.setText("Inventario");
                    botonProductos.add(labelProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 60));

                    iconoProductos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    iconoProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-inventory-25.png"))); // NOI18N
                    botonProductos.add(iconoProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

                    panelBarraLateral.add(botonProductos);
                    botonProductos.setBounds(0, 0, 210, 60);

                    botonUsuarios.setBackground(new java.awt.Color(54, 33, 150));
                    botonUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            botonUsuariosMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            botonUsuariosMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            botonUsuariosMouseExited(evt);
                        }
                    });
                    botonUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    iconoUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    iconoUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-user-25.png"))); // NOI18N
                    botonUsuarios.add(iconoUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

                    labelUsuarios.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
                    labelUsuarios.setForeground(new java.awt.Color(255, 255, 255));
                    labelUsuarios.setText("Usuarios");
                    botonUsuarios.add(labelUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 60));

                    panelBarraLateral.add(botonUsuarios);
                    botonUsuarios.setBounds(0, 60, 210, 60);

                    botonDescuentos.setBackground(new java.awt.Color(54, 33, 150));
                    botonDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            botonDescuentosMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            botonDescuentosMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            botonDescuentosMouseExited(evt);
                        }
                    });
                    botonDescuentos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    labelDescuentos.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
                    labelDescuentos.setForeground(new java.awt.Color(255, 255, 255));
                    labelDescuentos.setText("Descuentos");
                    botonDescuentos.add(labelDescuentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 60));

                    iconoDescuentos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    iconoDescuentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-discount-25.png"))); // NOI18N
                    botonDescuentos.add(iconoDescuentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

                    panelBarraLateral.add(botonDescuentos);
                    botonDescuentos.setBounds(0, 120, 210, 60);

                    botonVentas.setBackground(new java.awt.Color(54, 33, 150));
                    botonVentas.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            botonVentasMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            botonVentasMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            botonVentasMouseExited(evt);
                        }
                    });
                    botonVentas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    iconoVentas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    iconoVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-sales-25.png"))); // NOI18N
                    botonVentas.add(iconoVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

                    labelVentas.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
                    labelVentas.setForeground(new java.awt.Color(255, 255, 255));
                    labelVentas.setText("Ventas");
                    botonVentas.add(labelVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 60));

                    panelBarraLateral.add(botonVentas);
                    botonVentas.setBounds(0, 180, 210, 60);

                    botonInformes.setBackground(new java.awt.Color(54, 33, 150));
                    botonInformes.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            botonInformesMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            botonInformesMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            botonInformesMouseExited(evt);
                        }
                    });
                    botonInformes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                    iconoInformes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    iconoInformes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quickcheck/assets/iconos_barra_lateral/icons8-report-25.png"))); // NOI18N
                    botonInformes.add(iconoInformes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

                    labelInformes.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
                    labelInformes.setForeground(new java.awt.Color(255, 255, 255));
                    labelInformes.setText("Informes");
                    botonInformes.add(labelInformes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 140, 60));

                    panelBarraLateral.add(botonInformes);
                    botonInformes.setBounds(0, 240, 210, 60);

                    panelMenuPrincipal.setBackground(new java.awt.Color(255, 255, 255));
                    panelMenuPrincipal.setOpaque(true);

                    jLabel2.setBackground(new java.awt.Color(0, 0, 0));
                    jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
                    jLabel2.setForeground(new java.awt.Color(0, 0, 0));
                    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    jLabel2.setText("Usa la barra lateral para moverte entre ventanas");

                    panelMenuPrincipal.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    javax.swing.GroupLayout panelMenuPrincipalLayout = new javax.swing.GroupLayout(panelMenuPrincipal);
                    panelMenuPrincipal.setLayout(panelMenuPrincipalLayout);
                    panelMenuPrincipalLayout.setHorizontalGroup(
                        panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuPrincipalLayout.createSequentialGroup()
                            .addGap(150, 150, 150)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(151, 151, 151))
                    );
                    panelMenuPrincipalLayout.setVerticalGroup(
                        panelMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelMenuPrincipalLayout.createSequentialGroup()
                            .addGap(243, 243, 243)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addGap(261, 261, 261))
                    );

                    panelVentas.setBackground(new java.awt.Color(255, 255, 255));
                    panelVentas.setOpaque(true);

                    javax.swing.GroupLayout panelVentasLayout = new javax.swing.GroupLayout(panelVentas);
                    panelVentas.setLayout(panelVentasLayout);
                    panelVentasLayout.setHorizontalGroup(
                        panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1290, Short.MAX_VALUE)
                    );
                    panelVentasLayout.setVerticalGroup(
                        panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 718, Short.MAX_VALUE)
                    );

                    panelProductos.setBackground(new java.awt.Color(255, 255, 255));
                    panelProductos.setOpaque(true);

                    jPanel3.setBackground(new java.awt.Color(255, 255, 255));
                    jPanel3.setPreferredSize(new java.awt.Dimension(1210, 60));

                    jLabel1.setBackground(new java.awt.Color(73, 127, 131));
                    jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
                    jLabel1.setForeground(new java.awt.Color(73, 127, 131));
                    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    jLabel1.setText("Inventario");

                    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                    jPanel3.setLayout(jPanel3Layout);
                    jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(548, 548, 548)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addGap(549, 549, 549))
                    );
                    jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    );

                    jPanel5.setBackground(new java.awt.Color(255, 255, 255));
                    jPanel5.setPreferredSize(new java.awt.Dimension(840, 570));

                    tablaProductos.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
                    tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {},
                            {},
                            {},
                            {}
                        },
                        new String [] {

                        }
                    ));
                    tablaProductos.setComponentPopupMenu(menuClickDerechoProductos);
                    jScrollPane2.setViewportView(tablaProductos);

                    txtBuscarProductos.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
                    txtBuscarProductos.setForeground(new java.awt.Color(143, 143, 143));
                    txtBuscarProductos.setText("Buscar");
                    txtBuscarProductos.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            txtBuscarProductosFocusGained(evt);
                        }
                    });
                    txtBuscarProductos.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                            txtBuscarProductosKeyReleased(evt);
                        }
                    });

                    comboOrdenarProductos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    comboOrdenarProductos.setForeground(new java.awt.Color(0, 0, 0));
                    comboOrdenarProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
                    comboOrdenarProductos.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            comboOrdenarProductosActionPerformed(evt);
                        }
                    });

                    comboBuscarPorProductos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    comboBuscarPorProductos.setForeground(new java.awt.Color(0, 0, 0));
                    comboBuscarPorProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre del Producto", "ID", "Precio Unitario", "Cantidad Disponible", "Código de Barras", "Estado del Producto", "Fecha de Registro", "Categoría", "Descripción del Producto" }));
                    comboBuscarPorProductos.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            comboBuscarPorProductosActionPerformed(evt);
                        }
                    });

                    comboTipoBusquedaProductos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    comboTipoBusquedaProductos.setForeground(new java.awt.Color(0, 0, 0));
                    comboTipoBusquedaProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empieza por", "Termina con", "Contiene" }));
                    comboTipoBusquedaProductos.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            comboTipoBusquedaProductosActionPerformed(evt);
                        }
                    });

                    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
                    jPanel5.setLayout(jPanel5Layout);
                    jPanel5Layout.setHorizontalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(comboBuscarPorProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(77, 77, 77)
                                    .addComponent(comboTipoBusquedaProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(95, 95, 95)
                                    .addComponent(comboOrdenarProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(100, 100, 100)
                                    .addComponent(txtBuscarProductos)))
                            .addContainerGap())
                    );
                    jPanel5Layout.setVerticalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtBuscarProductos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboOrdenarProductos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboTipoBusquedaProductos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboBuscarPorProductos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                    );

                    panelProductos.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    panelProductos.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    javax.swing.GroupLayout panelProductosLayout = new javax.swing.GroupLayout(panelProductos);
                    panelProductos.setLayout(panelProductosLayout);
                    panelProductosLayout.setHorizontalGroup(
                        panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1290, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1290, Short.MAX_VALUE)
                    );
                    panelProductosLayout.setVerticalGroup(
                        panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelProductosLayout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                    );

                    panelDescuentos.setBackground(new java.awt.Color(255, 255, 255));
                    panelDescuentos.setOpaque(true);

                    jPanel2.setBackground(new java.awt.Color(255, 255, 255));
                    jPanel2.setPreferredSize(new java.awt.Dimension(1290, 60));
                    jPanel2.setLayout(new java.awt.BorderLayout());

                    jLabel3.setBackground(new java.awt.Color(73, 127, 131));
                    jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
                    jLabel3.setForeground(new java.awt.Color(73, 127, 131));
                    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    jLabel3.setText("Descuentos");
                    jPanel2.add(jLabel3, java.awt.BorderLayout.CENTER);

                    jPanel8.setBackground(new java.awt.Color(255, 255, 255));
                    jPanel8.setPreferredSize(new java.awt.Dimension(1290, 329));

                    tablaDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
                    tablaDescuentos.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {},
                            {},
                            {},
                            {}
                        },
                        new String [] {

                        }
                    ));
                    tablaDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            tablaDescuentosMouseClicked(evt);
                        }
                    });
                    jScrollPane4.setViewportView(tablaDescuentos);

                    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
                    jPanel8.setLayout(jPanel8Layout);
                    jPanel8Layout.setHorizontalGroup(
                        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4)
                    );
                    jPanel8Layout.setVerticalGroup(
                        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                    );

                    jPanel9.setBackground(new java.awt.Color(255, 255, 255));
                    jPanel9.setPreferredSize(new java.awt.Dimension(1290, 300));

                    txtNombreDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    txtNombreDescuentos.setForeground(new java.awt.Color(143, 143, 143));
                    txtNombreDescuentos.setText("Nombre");
                    txtNombreDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            txtNombreDescuentosFocusGained(evt);
                        }
                    });

                    txtCodigoDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    txtCodigoDescuentos.setForeground(new java.awt.Color(143, 143, 143));
                    txtCodigoDescuentos.setText("Código");
                    txtCodigoDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            txtCodigoDescuentosFocusGained(evt);
                        }
                    });

                    txtPorcentajeDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    txtPorcentajeDescuentos.setForeground(new java.awt.Color(143, 143, 143));
                    txtPorcentajeDescuentos.setText("Porcentaje");
                    txtPorcentajeDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            txtPorcentajeDescuentosFocusGained(evt);
                        }
                    });
                    txtPorcentajeDescuentos.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                            txtPorcentajeDescuentosKeyTyped(evt);
                        }
                    });

                    txtValorDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                    txtValorDescuentos.setForeground(new java.awt.Color(143, 143, 143));
                    txtValorDescuentos.setText("Valor");
                    txtValorDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            txtValorDescuentosFocusGained(evt);
                        }
                    });
                    txtValorDescuentos.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                            txtValorDescuentosKeyTyped(evt);
                        }
                    });

                }
                catch (Exception ex)
                {
                    ex.printStackTrace();
                }
                txtFechaInicioDescuentos.setForeground(new java.awt.Color(143, 143, 143));
                txtFechaInicioDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
                txtFechaInicioDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        txtFechaInicioDescuentosFocusGained(evt);
                    }
                });

            }
            catch (Exception ex)
            {
                ex.printStackTrace();
            }
            txtFechaFinDescuentos.setForeground(new java.awt.Color(143, 143, 143));
            txtFechaFinDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtFechaFinDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtFechaFinDescuentosFocusGained(evt);
                }
            });

            comboActivoDescuentos.setForeground(new java.awt.Color(0, 0, 0));
            comboActivoDescuentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponibilidad", "SI", "NO" }));

            contActualizarDescuentos.setBackground(new java.awt.Color(92, 164, 169));
            contActualizarDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    contActualizarDescuentosMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    contActualizarDescuentosMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    contActualizarDescuentosMouseExited(evt);
                }
            });

            lblActualizarDescuentos.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
            lblActualizarDescuentos.setForeground(new java.awt.Color(255, 255, 255));
            lblActualizarDescuentos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblActualizarDescuentos.setText("Actualizar");

            javax.swing.GroupLayout contActualizarDescuentosLayout = new javax.swing.GroupLayout(contActualizarDescuentos);
            contActualizarDescuentos.setLayout(contActualizarDescuentosLayout);
            contActualizarDescuentosLayout.setHorizontalGroup(
                contActualizarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblActualizarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            contActualizarDescuentosLayout.setVerticalGroup(
                contActualizarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblActualizarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            contEliminarDescuentos.setBackground(new java.awt.Color(192, 36, 36));

            lblEliminarDescuentos.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
            lblEliminarDescuentos.setForeground(new java.awt.Color(255, 255, 255));
            lblEliminarDescuentos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblEliminarDescuentos.setText("Eliminar");
            lblEliminarDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    lblEliminarDescuentosMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    lblEliminarDescuentosMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    lblEliminarDescuentosMouseExited(evt);
                }
            });

            javax.swing.GroupLayout contEliminarDescuentosLayout = new javax.swing.GroupLayout(contEliminarDescuentos);
            contEliminarDescuentos.setLayout(contEliminarDescuentosLayout);
            contEliminarDescuentosLayout.setHorizontalGroup(
                contEliminarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 175, Short.MAX_VALUE)
                .addGroup(contEliminarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEliminarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
            );
            contEliminarDescuentosLayout.setVerticalGroup(
                contEliminarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 75, Short.MAX_VALUE)
                .addGroup(contEliminarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEliminarDescuentos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
            );

            contRegistrarDescuentos.setBackground(new java.awt.Color(92, 164, 169));
            contRegistrarDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    contRegistrarDescuentosMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    contRegistrarDescuentosMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    contRegistrarDescuentosMouseExited(evt);
                }
            });

            lblRegistrarDescuentos.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
            lblRegistrarDescuentos.setForeground(new java.awt.Color(255, 255, 255));
            lblRegistrarDescuentos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblRegistrarDescuentos.setText("Registrar");

            javax.swing.GroupLayout contRegistrarDescuentosLayout = new javax.swing.GroupLayout(contRegistrarDescuentos);
            contRegistrarDescuentos.setLayout(contRegistrarDescuentosLayout);
            contRegistrarDescuentosLayout.setHorizontalGroup(
                contRegistrarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblRegistrarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            contRegistrarDescuentosLayout.setVerticalGroup(
                contRegistrarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblRegistrarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
            );

            contCancelarDescuentos.setBackground(new java.awt.Color(92, 164, 169));

            lblCancelarDescuentos.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
            lblCancelarDescuentos.setForeground(new java.awt.Color(255, 255, 255));
            lblCancelarDescuentos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblCancelarDescuentos.setText("Cancelar");
            lblCancelarDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    lblCancelarDescuentosMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    lblCancelarDescuentosMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    lblCancelarDescuentosMouseExited(evt);
                }
            });

            javax.swing.GroupLayout contCancelarDescuentosLayout = new javax.swing.GroupLayout(contCancelarDescuentos);
            contCancelarDescuentos.setLayout(contCancelarDescuentosLayout);
            contCancelarDescuentosLayout.setHorizontalGroup(
                contCancelarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 175, Short.MAX_VALUE)
                .addGroup(contCancelarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCancelarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
            );
            contCancelarDescuentosLayout.setVerticalGroup(
                contCancelarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(contCancelarDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCancelarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
            );

            txtBuscarDescuentos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtBuscarDescuentos.setForeground(new java.awt.Color(143, 143, 143));
            txtBuscarDescuentos.setText("Buscar");
            txtBuscarDescuentos.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtBuscarDescuentosFocusGained(evt);
                }
            });
            txtBuscarDescuentos.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtBuscarDescuentosKeyReleased(evt);
                }
            });

            javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
            jPanel9.setLayout(jPanel9Layout);
            jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtValorDescuentos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCodigoDescuentos)
                                .addComponent(txtNombreDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPorcentajeDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(46, 46, 46)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFechaFinDescuentos, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtFechaInicioDescuentos, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(comboActivoDescuentos, 0, 200, Short.MAX_VALUE)
                        .addComponent(txtBuscarDescuentos))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(contRegistrarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contCancelarDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(contActualizarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contEliminarDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(64, 64, 64))
            );
            jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap(58, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(contActualizarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contRegistrarDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(contCancelarDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contEliminarDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(66, 66, 66))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtFechaInicioDescuentos)
                        .addComponent(txtNombreDescuentos))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCodigoDescuentos)
                        .addComponent(txtFechaFinDescuentos))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboActivoDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPorcentajeDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtValorDescuentos, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                        .addComponent(txtBuscarDescuentos))
                    .addContainerGap())
            );

            panelDescuentos.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
            panelDescuentos.setLayer(jPanel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
            panelDescuentos.setLayer(jPanel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout panelDescuentosLayout = new javax.swing.GroupLayout(panelDescuentos);
            panelDescuentos.setLayout(panelDescuentosLayout);
            panelDescuentosLayout.setHorizontalGroup(
                panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            panelDescuentosLayout.setVerticalGroup(
                panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDescuentosLayout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE))
            );

            panelUsuarios.setBackground(new java.awt.Color(255, 255, 255));
            panelUsuarios.setOpaque(true);

            jPanel1.setBackground(new java.awt.Color(255, 255, 255));
            jPanel1.setPreferredSize(new java.awt.Dimension(1290, 60));

            jLabel4.setBackground(new java.awt.Color(73, 127, 131));
            jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
            jLabel4.setForeground(new java.awt.Color(73, 127, 131));
            jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel4.setText("Usuarios");

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1290, javax.swing.GroupLayout.PREFERRED_SIZE)
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
            );

            jPanel6.setBackground(new java.awt.Color(255, 255, 255));
            jPanel6.setMinimumSize(new java.awt.Dimension(890, 100));

            tablaUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
            tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {},
                    {},
                    {},
                    {}
                },
                new String [] {

                }
            ));
            tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tablaUsuariosMouseClicked(evt);
                }
            });
            jScrollPane3.setViewportView(tablaUsuarios);

            txtBuscarUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtBuscarUsuarios.setForeground(new java.awt.Color(143, 143, 143));
            txtBuscarUsuarios.setText("Buscar Usuario");
            txtBuscarUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtBuscarUsuariosFocusGained(evt);
                }
            });
            txtBuscarUsuarios.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtBuscarUsuariosKeyReleased(evt);
                }
            });

            javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
            jPanel6.setLayout(jPanel6Layout);
            jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtBuscarUsuarios)
                        .addComponent(jScrollPane3))
                    .addContainerGap())
            );
            jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jScrollPane3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(txtBuscarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );

            jPanel7.setBackground(new java.awt.Color(255, 255, 255));
            jPanel7.setPreferredSize(new java.awt.Dimension(400, 658));

            txtUserNameUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtUserNameUsuarios.setForeground(new java.awt.Color(143, 143, 143));
            txtUserNameUsuarios.setText("Nombre de Usuario");
            txtUserNameUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtUserNameUsuariosFocusGained(evt);
                }
            });

            txtNombreUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtNombreUsuarios.setForeground(new java.awt.Color(143, 143, 143));
            txtNombreUsuarios.setText("Nombre Completo");
            txtNombreUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtNombreUsuariosFocusGained(evt);
                }
            });

            txtEmailUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtEmailUsuarios.setForeground(new java.awt.Color(143, 143, 143));
            txtEmailUsuarios.setText("Correo electrónico");
            txtEmailUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtEmailUsuariosFocusGained(evt);
                }
            });

            contEliminarUsuarios.setBackground(new java.awt.Color(192, 36, 36));
            contEliminarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    contEliminarUsuariosMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    contEliminarUsuariosMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    contEliminarUsuariosMouseExited(evt);
                }
            });

            lblEliminarUsuarios.setFont(new java.awt.Font("Ubuntu", 1, 19)); // NOI18N
            lblEliminarUsuarios.setForeground(new java.awt.Color(255, 255, 255));
            lblEliminarUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblEliminarUsuarios.setText("Eliminar");

            javax.swing.GroupLayout contEliminarUsuariosLayout = new javax.swing.GroupLayout(contEliminarUsuarios);
            contEliminarUsuarios.setLayout(contEliminarUsuariosLayout);
            contEliminarUsuariosLayout.setHorizontalGroup(
                contEliminarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblEliminarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
            );
            contEliminarUsuariosLayout.setVerticalGroup(
                contEliminarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblEliminarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
            );

            txtClaveUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            txtClaveUsuarios.setForeground(new java.awt.Color(143, 143, 143));
            txtClaveUsuarios.setText("**********");
            txtClaveUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    txtClaveUsuariosFocusGained(evt);
                }
            });

        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        txtNumeroUsuarios.setForeground(new java.awt.Color(143, 143, 143));
        txtNumeroUsuarios.setText("+_ (___) ___-____");
        txtNumeroUsuarios.setToolTipText("");
        txtNumeroUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txtNumeroUsuarios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroUsuariosFocusGained(evt);
            }
        });
        txtNumeroUsuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroUsuariosKeyTyped(evt);
            }
        });

        contCancelarUsuarios.setBackground(new java.awt.Color(92, 164, 169));
        contCancelarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contCancelarUsuariosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                contCancelarUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                contCancelarUsuariosMouseExited(evt);
            }
        });

        lblCancelarUsuarios.setFont(new java.awt.Font("Ubuntu", 1, 19)); // NOI18N
        lblCancelarUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        lblCancelarUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancelarUsuarios.setText("Cancelar");

        javax.swing.GroupLayout contCancelarUsuariosLayout = new javax.swing.GroupLayout(contCancelarUsuarios);
        contCancelarUsuarios.setLayout(contCancelarUsuariosLayout);
        contCancelarUsuariosLayout.setHorizontalGroup(
            contCancelarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCancelarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        contCancelarUsuariosLayout.setVerticalGroup(
            contCancelarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCancelarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        contActualizarUsuarios.setBackground(new java.awt.Color(92, 164, 169));
        contActualizarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contActualizarUsuariosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                contActualizarUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                contActualizarUsuariosMouseExited(evt);
            }
        });

        lblActualizarUsuarios.setFont(new java.awt.Font("Ubuntu", 1, 19)); // NOI18N
        lblActualizarUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        lblActualizarUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblActualizarUsuarios.setText("Actualizar");

        javax.swing.GroupLayout contActualizarUsuariosLayout = new javax.swing.GroupLayout(contActualizarUsuarios);
        contActualizarUsuarios.setLayout(contActualizarUsuariosLayout);
        contActualizarUsuariosLayout.setHorizontalGroup(
            contActualizarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblActualizarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        contActualizarUsuariosLayout.setVerticalGroup(
            contActualizarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblActualizarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        contRegistrarUsuarios.setBackground(new java.awt.Color(92, 164, 169));
        contRegistrarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contRegistrarUsuariosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                contRegistrarUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                contRegistrarUsuariosMouseExited(evt);
            }
        });

        lblRegistrarUsuarios.setFont(new java.awt.Font("Ubuntu", 1, 19)); // NOI18N
        lblRegistrarUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        lblRegistrarUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegistrarUsuarios.setText("Registrar");

        javax.swing.GroupLayout contRegistrarUsuariosLayout = new javax.swing.GroupLayout(contRegistrarUsuarios);
        contRegistrarUsuarios.setLayout(contRegistrarUsuariosLayout);
        contRegistrarUsuariosLayout.setHorizontalGroup(
            contRegistrarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblRegistrarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        contRegistrarUsuariosLayout.setVerticalGroup(
            contRegistrarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblRegistrarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        comboNivelAccesoUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        comboNivelAccesoUsuarios.setForeground(new java.awt.Color(0, 0, 0));
        comboNivelAccesoUsuarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir", "Administrador", "Cajero", "Supervisor", "Inventario" }));

        comboEstadoCuentaUsuarios.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        comboEstadoCuentaUsuarios.setForeground(new java.awt.Color(0, 0, 0));
        comboEstadoCuentaUsuarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir", "Activa", "Inactiva" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUserNameUsuarios)
                    .addComponent(txtClaveUsuarios)
                    .addComponent(txtNombreUsuarios)
                    .addComponent(txtEmailUsuarios)
                    .addComponent(txtNumeroUsuarios, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contCancelarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contRegistrarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contActualizarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contEliminarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addComponent(comboNivelAccesoUsuarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboEstadoCuentaUsuarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUserNameUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClaveUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmailUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNivelAccesoUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumeroUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboEstadoCuentaUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contActualizarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contRegistrarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contEliminarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contCancelarUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelUsuarios.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelUsuarios.setLayer(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelUsuarios.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelUsuariosLayout = new javax.swing.GroupLayout(panelUsuarios);
        panelUsuarios.setLayout(panelUsuariosLayout);
        panelUsuariosLayout.setHorizontalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelUsuariosLayout.setVerticalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panelInformes.setBackground(new java.awt.Color(255, 255, 255));
        panelInformes.setOpaque(true);
        panelInformes.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(1290, 60));

        jLabel5.setBackground(new java.awt.Color(73, 127, 131));
        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(73, 127, 131));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Informes");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(548, 548, 548)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(549, 549, 549))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelInformes.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        comboMonthInformes.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        comboMonthInformes.setForeground(new java.awt.Color(0, 0, 0));
        comboMonthInformes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        comboMonthInformes.setEnabled(false);
        comboMonthInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonthInformesActionPerformed(evt);
            }
        });

        comboPeriodoInformes.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        comboPeriodoInformes.setForeground(new java.awt.Color(0, 0, 0));
        comboPeriodoInformes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Periodo del Informe", "Anual", "Mensual" }));
        comboPeriodoInformes.setEnabled(false);
        comboPeriodoInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPeriodoInformesActionPerformed(evt);
            }
        });

        comboYearInformes.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        comboYearInformes.setForeground(new java.awt.Color(0, 0, 0));
        comboYearInformes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Año", "2023" }));
        comboYearInformes.setEnabled(false);
        comboYearInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboYearInformesActionPerformed(evt);
            }
        });

        tablaInformes.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        tablaInformes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(tablaInformes);

        comboTipoInformes.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        comboTipoInformes.setForeground(new java.awt.Color(0, 0, 0));
        comboTipoInformes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de Informe", "Inventario", "Ventas" }));
        comboTipoInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoInformesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(comboTipoInformes, 0, 240, Short.MAX_VALUE)
                .addGap(70, 70, 70)
                .addComponent(comboPeriodoInformes, 0, 240, Short.MAX_VALUE)
                .addGap(70, 70, 70)
                .addComponent(comboYearInformes, 0, 240, Short.MAX_VALUE)
                .addGap(70, 70, 70)
                .addComponent(comboMonthInformes, 0, 240, Short.MAX_VALUE)
                .addGap(60, 60, 60))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPeriodoInformes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMonthInformes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYearInformes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipoInformes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
        );

        panelInformes.add(jPanel11, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout panelVentanaPanelesLayout = new javax.swing.GroupLayout(panelVentanaPaneles);
        panelVentanaPaneles.setLayout(panelVentanaPanelesLayout);
        panelVentanaPanelesLayout.setHorizontalGroup(
            panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelMenuPrincipal, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelVentas))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelProductos))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelDescuentos, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelUsuarios))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelInformes, javax.swing.GroupLayout.Alignment.TRAILING))
        );
        panelVentanaPanelesLayout.setVerticalGroup(
            panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelMenuPrincipal))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelVentas))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelProductos))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelDescuentos))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelUsuarios))
            .addGroup(panelVentanaPanelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelInformes))
        );

        javax.swing.GroupLayout panelVentanaLayout = new javax.swing.GroupLayout(panelVentana);
        panelVentana.setLayout(panelVentanaLayout);
        panelVentanaLayout.setHorizontalGroup(
            panelVentanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentanaLayout.createSequentialGroup()
                .addComponent(panelBarraLateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1290, Short.MAX_VALUE))
            .addGroup(panelVentanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelVentanaPaneles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelVentanaLayout.setVerticalGroup(
            panelVentanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVentanaLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelBarraLateral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelVentanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelVentanaPaneles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelVentana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelVentana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(panelFondo, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Botones de la barra de título">
    
    // Animaciones del botón de cerrar de la barra de título
    private void lblCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseEntered
        contCerrar.setBackground(new Color(255, 40, 86));
    }//GEN-LAST:event_lblCerrarMouseEntered

    private void lblCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseExited
        contCerrar.setBackground(new Color(87,154,233));
    }//GEN-LAST:event_lblCerrarMouseExited
    
   // Animaciones del botón de maximizar de la barra de título 
    private void lblMaximizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMaximizarMouseEntered
        contMaximizar.setBackground(new Color(115, 169, 233));
    }//GEN-LAST:event_lblMaximizarMouseEntered

    private void lblMaximizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMaximizarMouseExited
        contMaximizar.setBackground(new Color(87,154,233));
    }//GEN-LAST:event_lblMaximizarMouseExited

    // Animaciónes del botón de ocultar de la barra de título
    private void lblOcultarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOcultarMouseEntered
        contOcultar.setBackground(new Color(115, 169, 233));
    }//GEN-LAST:event_lblOcultarMouseEntered

    private void lblOcultarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOcultarMouseExited
        contOcultar.setBackground(new Color(87,154,233));
    }//GEN-LAST:event_lblOcultarMouseExited

    // Eventos de los botones de la barra de título
    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        mbm.cerrarVentana();
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void lblMaximizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMaximizarMouseClicked
        mbm.maximizarVentana(this);
    }//GEN-LAST:event_lblMaximizarMouseClicked

    private void lblOcultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOcultarMouseClicked
        mbm.ocultarVentana(this);
    }//GEN-LAST:event_lblOcultarMouseClicked
    
    // Eventos para poder arrastrar la ventana usando la barra de título
    private void barraTituloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraTituloMousePressed
        mouseX =  evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_barraTituloMousePressed

    private void barraTituloMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraTituloMouseDragged
        mbm.arrastrarVentana(this);
        
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mouseX, y - mouseY);
    }//GEN-LAST:event_barraTituloMouseDragged

    // Evento para maximizar la ventana haciendo doble click
    private void barraTituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraTituloMouseClicked
        mbm.maximizarDobleClick(this);
    }//GEN-LAST:event_barraTituloMouseClicked
    // </editor-fold> 
    
    // <editor-fold defaultstate="collapsed" desc="Barra lateral">
    
    // Animaciones y eventos del botón de configuración de la barra lateral
    private void lblConfiguracionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracionMouseExited
        contConfiguracion.setBackground(new Color(56,33,165));
    }//GEN-LAST:event_lblConfiguracionMouseExited

    private void lblConfiguracionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracionMouseEntered
        contConfiguracion.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_lblConfiguracionMouseEntered
    
    private void lblConfiguracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblConfiguracionMouseClicked

    // Animaciones y eventos del botón para alternar la visibilidad de la barra lateral
    private void lblBotonBarraLateralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonBarraLateralMouseExited
        contBotonBarraLateral.setBackground(new Color(56,33,165));
    }//GEN-LAST:event_lblBotonBarraLateralMouseExited

    private void lblBotonBarraLateralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonBarraLateralMouseEntered
        contBotonBarraLateral.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_lblBotonBarraLateralMouseEntered
    
    private void lblBotonBarraLateralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonBarraLateralMouseClicked
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
    }//GEN-LAST:event_lblBotonBarraLateralMouseClicked
    // </editor-fold>
    
    // Animaciones y eventos de la opción 'Informes' de la barra lateral.
    private void botonInformesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonInformesMouseExited
        botonInformes.setBackground(new Color(54,33,150));
    }//GEN-LAST:event_botonInformesMouseExited

    private void botonInformesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonInformesMouseEntered
        botonInformes.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_botonInformesMouseEntered

    private void botonInformesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonInformesMouseClicked
        mbl.cambiarPanel(panelVentanaPaneles, panelInformes);
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
    }//GEN-LAST:event_botonInformesMouseClicked

    // Animaciones y eventos de la opción 'Ventas' de la barra lateral.
    private void botonVentasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVentasMouseExited
        botonVentas.setBackground(new Color(54,33,150));
    }//GEN-LAST:event_botonVentasMouseExited

    private void botonVentasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVentasMouseEntered
        botonVentas.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_botonVentasMouseEntered

    private void botonVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVentasMouseClicked
        mbl.cambiarPanel(panelVentanaPaneles, panelVentas);
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
    }//GEN-LAST:event_botonVentasMouseClicked

    // Animaciones y eventos de la opción 'Descuentos' de la barra lateral.
    private void botonDescuentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDescuentosMouseExited
        botonDescuentos.setBackground(new Color(54,33,150));
    }//GEN-LAST:event_botonDescuentosMouseExited

    private void botonDescuentosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDescuentosMouseEntered
        botonDescuentos.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_botonDescuentosMouseEntered

    private void botonDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDescuentosMouseClicked
        mbl.cambiarPanel(panelVentanaPaneles, panelDescuentos);
        configurarVentanaDescuentos();
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
    }//GEN-LAST:event_botonDescuentosMouseClicked

    // Animaciones y eventos de la opción 'Usuarios' de la barra lateral.
    private void botonUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonUsuariosMouseExited
        botonUsuarios.setBackground(new Color(54,33,150));
    }//GEN-LAST:event_botonUsuariosMouseExited

    private void botonUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonUsuariosMouseEntered
        botonUsuarios.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_botonUsuariosMouseEntered

    private void botonUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonUsuariosMouseClicked
        mbl.cambiarPanel(panelVentanaPaneles, panelUsuarios);
        configurarVentanaUsuarios();
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
    }//GEN-LAST:event_botonUsuariosMouseClicked

    // Animaciones y eventos de la opción 'Productos' de la barra lateral.
    private void botonProductosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonProductosMouseExited
        botonProductos.setBackground(new Color(54,33,150));
    }//GEN-LAST:event_botonProductosMouseExited

    private void botonProductosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonProductosMouseEntered
        botonProductos.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_botonProductosMouseEntered

    private void botonProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonProductosMouseClicked
        mbl.cambiarPanel(panelVentanaPaneles, panelProductos);
        mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
        configurarVentanaProductos();
    }//GEN-LAST:event_botonProductosMouseClicked
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Animaciones y eventos del botón de cerrar sesión">
    private void lblCerrarSesionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarSesionMouseEntered
        contCerrarSesion.setBackground(new Color(75, 50, 188));
    }//GEN-LAST:event_lblCerrarSesionMouseEntered

    private void lblCerrarSesionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarSesionMouseExited
        contCerrarSesion.setBackground(new Color(56,33,165));
    }//GEN-LAST:event_lblCerrarSesionMouseExited

    private void lblCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarSesionMouseClicked
        LoginForm loginForm = new LoginForm(cn);
        loginForm.setVisible(true);
        loginForm.setLocationRelativeTo(null);
        
        this.dispose();
    }//GEN-LAST:event_lblCerrarSesionMouseClicked
    // </editor-fold>
    
    /**
     * Cierra la barra lateral cuando se hace click en cualquier panel que no sea el de la barra lateral.
     * 
     * @param evt 
     */
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        if (mbl.getBarraLateralAbierta() && evt.getComponent() != panelBarraLateral) {
            mbl.alternarBarraLateral(panelBarraLateral, lblBotonBarraLateral);
        }
    }//GEN-LAST:event_formMousePressed
    
    private void txtBuscarProductosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarProductosFocusGained
        mtf.establecerTextoPredeterminado(txtBuscarProductos, "Buscar");
    }//GEN-LAST:event_txtBuscarProductosFocusGained
        
    // Metodos de busqueda en la base de datos
    private void comboBuscarPorProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBuscarPorProductosActionPerformed
        cargarDatosTablaProductos(txtBuscarProductos.getText());
    }//GEN-LAST:event_comboBuscarPorProductosActionPerformed

    private void comboTipoBusquedaProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoBusquedaProductosActionPerformed
        cargarDatosTablaProductos(txtBuscarProductos.getText());
    }//GEN-LAST:event_comboTipoBusquedaProductosActionPerformed

    private void comboOrdenarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrdenarProductosActionPerformed
        cargarDatosTablaProductos(txtBuscarProductos.getText());
    }//GEN-LAST:event_comboOrdenarProductosActionPerformed

    private void txtBuscarProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductosKeyReleased
        cargarDatosTablaProductos(txtBuscarProductos.getText());
    }//GEN-LAST:event_txtBuscarProductosKeyReleased

    /**
     * Maneja la acción de eliminación de un registro de productos. Esta función muestra un cuadro de diálogo de confirmación
     * antes de eliminar el registro seleccionado de la base de datos. Si el usuario confirma la eliminación, se ejecuta la
     * consulta SQL de eliminación y luego se actualiza la tabla de productos y se limpian los campos de edición.
     *
     * @param evt El evento de acción que desencadena la llamada a este método.
     */
    private void btnEliminarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductosActionPerformed

    }//GEN-LAST:event_btnEliminarProductosActionPerformed

    // Metodos de la tabla de la ventana
    
    /**
     * Carga los datos de productos en la tabla de visualización según los criterios de búsqueda especificados.
     *
     * @param busqueda Cadena de búsqueda para filtrar los productos a mostrar.
     */
    private void cargarDatosTablaProductos(String busqueda) {
        String[] nombresColumnasBD = {"nombre_producto", "id_producto", "precio_unitario", "cantidad_disponible", "codigo_barras", "estado_producto", "fecha_registro", "categoria", "descripcion_producto"};
        
        DefaultTableModel modelo = new TablaNoEditable();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre del Producto");
        modelo.addColumn("Precio Unitario");
        modelo.addColumn("Cantidad Disponible");
        modelo.addColumn("Código de Barras");
        modelo.addColumn("Estado del Producto");
        modelo.addColumn("Fecha de Registro");
        modelo.addColumn("Categoría");
        modelo.addColumn("Descripción del producto");
        
        tablaProductos.setModel(modelo);
        tablaProductos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
        String filtro = mb.getBuscarPor(comboBuscarPorProductos, nombresColumnasBD);
        String busquedaCompleta = mb.getFormatoBusqueda(busqueda, comboTipoBusquedaProductos);
        String orden = mb.getOrdenarPor(comboOrdenarProductos);
        
        String consultasql = mb.obtenerConsulta("productos", filtro, busquedaCompleta, orden);
        System.out.println(consultasql);
        
        String data[] = new String[9];
        
        Statement st;
        
        try
        {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consultasql);
            
            while (rs.next())
            {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);
                data[4] = rs.getString(5);
                data[5] = rs.getString(6);
                data[6] = rs.getString(7);
                data[7] = rs.getString(8);
                data[8] = rs.getString(9);
                modelo.addRow(data);
            }
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos.",  "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, e,  "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error al mostrar los datos: " + e);
        }
    }

    // Metodos de la ventana
   
    /**
     * Limpia los campos del formulario de productos y restablece sus valores predeterminados.
     */
    private void limpiarCamposProductos() {        
        mtf.reiniciarTexto(txtBuscarProductos, "Buscar");
    }
    
    /**
     * Configura la ventana de productos, restableciendo los campos y cargando los datos en la tabla.
     */
    public void configurarVentanaProductos() {
        limpiarCamposProductos();
        cargarDatosTablaProductos("");
    }
    // </editor-fold>
   
    // <editor-fold defaultstate="collapsed" desc="Métodos de la pestaña de Usuarios">
    
    // FocusListeners para establecer un texto predeterminado en los campos de la ventana
    private void txtUserNameUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtUserNameUsuarios, "Nombre de Usuario");
    }//GEN-LAST:event_txtUserNameUsuariosFocusGained

    private void txtClaveUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClaveUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtClaveUsuarios, "**********");
    }//GEN-LAST:event_txtClaveUsuariosFocusGained

    private void txtNombreUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtNombreUsuarios, "Nombre Completo");
    }//GEN-LAST:event_txtNombreUsuariosFocusGained

    private void txtEmailUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtEmailUsuarios, "Correo electrónico");
    }//GEN-LAST:event_txtEmailUsuariosFocusGained

    private void txtNumeroUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtNumeroUsuarios, "");
    }//GEN-LAST:event_txtNumeroUsuariosFocusGained

    private void txtBuscarUsuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarUsuariosFocusGained
        mtf.establecerTextoPredeterminado(txtBuscarUsuarios, "Buscar Usuario");
    }//GEN-LAST:event_txtBuscarUsuariosFocusGained

     // Animaciones para los botones de la ventana
    private void contRegistrarUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarUsuariosMouseEntered
        if (!contRegistrarUsuarios.isEnabled() || !lblRegistrarUsuarios.isEnabled()) {return;}
        contRegistrarUsuarios.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_contRegistrarUsuariosMouseEntered

    private void contRegistrarUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarUsuariosMouseExited
        if (!contRegistrarUsuarios.isEnabled() || !lblRegistrarUsuarios.isEnabled()) {return;}
        contRegistrarUsuarios.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_contRegistrarUsuariosMouseExited

    private void contActualizarUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarUsuariosMouseEntered
        if (!contActualizarUsuarios.isEnabled() || !lblActualizarUsuarios.isEnabled()) {return;}
        contActualizarUsuarios.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_contActualizarUsuariosMouseEntered

    private void contActualizarUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarUsuariosMouseExited

        if (!contActualizarUsuarios.isEnabled() || !lblActualizarUsuarios.isEnabled()) {return;}
        contActualizarUsuarios.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_contActualizarUsuariosMouseExited

    private void contCancelarUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contCancelarUsuariosMouseEntered
        if (!contCancelarUsuarios.isEnabled() || !lblCancelarUsuarios.isEnabled()) {return;}
        contCancelarUsuarios.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_contCancelarUsuariosMouseEntered

    private void contCancelarUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contCancelarUsuariosMouseExited
        if (!contCancelarUsuarios.isEnabled() || !lblCancelarUsuarios.isEnabled()) {return;}
        contCancelarUsuarios.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_contCancelarUsuariosMouseExited

    private void contEliminarUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contEliminarUsuariosMouseEntered
        if (!contEliminarUsuarios.isEnabled() || !lblEliminarUsuarios.isEnabled()) {return;}
        contEliminarUsuarios.setBackground(mbtn.getDefaultButtonWarningHover());
    }//GEN-LAST:event_contEliminarUsuariosMouseEntered

    private void contEliminarUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contEliminarUsuariosMouseExited
        if (!contEliminarUsuarios.isEnabled() || !lblEliminarUsuarios.isEnabled()) {return;}
        contEliminarUsuarios.setBackground(mbtn.getDefaultButtonWarning());
    }//GEN-LAST:event_contEliminarUsuariosMouseExited

    /**
     * Método invocado cuando se hace clic en el botón de registro de usuarios.
     * Este método se encarga de recopilar los datos ingresados por el usuario en los campos correspondientes,
     * validarlos y luego insertarlos en la base de datos en la tabla de usuarios.
     *
     * @param evt El evento del mouse que desencadenó la llamada a este método.
     */
    private void contRegistrarUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarUsuariosMouseClicked
        if (!contRegistrarUsuarios.isEnabled() || !lblRegistrarUsuarios.isEnabled()) {return;}
        
        String nombreUsuario = txtUserNameUsuarios.getText();
        String clave = String.valueOf(txtClaveUsuarios.getPassword());
        String nombreCompleto = txtNombreUsuarios.getText();
        String email = txtEmailUsuarios.getText();
        String nivelAcceso = mcb.getComboText(comboNivelAccesoUsuarios);
        String numeroTelefono = txtNumeroUsuarios.getText();
        
        if (numeroTelefono.equals("+_ (___) ___-____")) {
            numeroTelefono = "";
        }
        
        String estadoCuenta = mcb.getComboText(comboEstadoCuentaUsuarios);
        
        if (mv.validarDatos(nombreUsuario, "Nombre de Usuario", "nombre de usuario") ||
            mv.validarDatos(txtClaveUsuarios, "*********", "contraseña") ||
            mv.validarComboBox(nivelAcceso, "nivel de acceso") ||
            mv.validarComboBox(estadoCuenta, "estado de la cuenta"))
            {
                return;
            }
        
        String sentenciasql = "INSERT INTO usuarios"
                + "(nombre_usuario, "
                + "clave, "
                + "nombre_completo, "
                + "email, "
                + "nivel_acceso, "
                + "numero_telefono, "
                + "estado_cuenta) "
                + "VALUES (?, ?, ?, ?, ?, ?, ?);";
        
        try {
            PreparedStatement ps = cn.prepareStatement(sentenciasql);
            
            ps.setString(1, nombreUsuario);
            ps.setString(2, clave);
            ps.setString(3, nombreCompleto);
            ps.setString(4, email);
            ps.setString(5, nivelAcceso);
            ps.setString(6, numeroTelefono);
            ps.setString(7, estadoCuenta);
            
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente");
            
            cargarDatosTablaUsuarios("");
            limpiarCamposUsuarios();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar",  "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex,  "Error: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_contRegistrarUsuariosMouseClicked

    /**
     * Método invocado cuando se hace clic en el botón de actualización de usuarios.
     * Este método se encarga de recopilar los datos ingresados por el usuario en los campos correspondientes,
     * validarlos y luego actualizar el registro correspondiente en la base de datos en la tabla de usuarios.
     *
     * @param evt El evento del mouse que desencadenó la llamada a este método.
     */
    private void contActualizarUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarUsuariosMouseClicked
        if (!contActualizarUsuarios.isEnabled() || !lblActualizarUsuarios.isEnabled()) {return;}
        
        String nombreUsuario = txtUserNameUsuarios.getText();
        String clave = String.valueOf(txtClaveUsuarios.getPassword());
        String nombreCompleto = txtNombreUsuarios.getText();
        String email = txtEmailUsuarios.getText();
        String nivelAcceso = mcb.getComboText(comboNivelAccesoUsuarios);
        String numeroTelefono = txtNumeroUsuarios.getText();
        
        if (numeroTelefono.equals("+_ (___) ___-____")) {
            numeroTelefono = "";
        }
        
        String estadoCuenta = mcb.getComboText(comboEstadoCuentaUsuarios);
        
        if (mv.validarDatos(nombreUsuario, "Nombre de Usuario", "nombre de usuario") ||
            mv.validarDatos(txtClaveUsuarios, "*********", "contraseña") ||
            mv.validarComboBox(nivelAcceso, "nivel de acceso") ||
            mv.validarComboBox(estadoCuenta, "estado de la cuenta"))
            {
                return;
            }
        
        String sentenciasql = String.format(
            "UPDATE usuarios SET "
            + "nombre_usuario=?, "
            + "clave=?, "
            + "nombre_completo=?, "
            + "email=?, "
            + "nivel_acceso=?, "
            + "numero_telefono=?, "
            + "estado_cuenta=? "
            + "WHERE id_usuario='%s';"
            , tablaUsuarios.getSelectedRow()
        );
        
        System.out.println(sentenciasql);
        
        try {
            PreparedStatement ps = cn.prepareStatement(sentenciasql);

            ps.setString(1, nombreUsuario);
            ps.setString(2, clave);
            ps.setString(3, nombreCompleto);
            ps.setString(4, email);
            ps.setString(5, nivelAcceso);
            ps.setString(6, numeroTelefono);
            ps.setString(7, estadoCuenta);

            int index = ps.executeUpdate();

            if (index > 0) {
                JOptionPane.showMessageDialog(null, "Datos actualizados correctamente", "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);
                mbtn.deshabilitarBotonDefault(contActualizarUsuarios, lblActualizarUsuarios);
                mbtn.habilitarBotonDefault(contRegistrarUsuarios, lblRegistrarUsuarios);

                limpiarCamposUsuarios();
                cargarDatosTablaUsuarios("");
            } else {
                JOptionPane.showMessageDialog(null, "No seleccionó fila", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "No se pudo actualizar el registro", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, "Error: " +e);
            System.out.println("No se pudo actualizar: " + e);
        }
    }//GEN-LAST:event_contActualizarUsuariosMouseClicked

    /**
     * Limpia los campos de la ventana al hacer click en el botón
     * 
     * @param evt 
     */
    private void contCancelarUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contCancelarUsuariosMouseClicked
        limpiarCamposUsuarios();
    }//GEN-LAST:event_contCancelarUsuariosMouseClicked

    /**
     * Elimina de la base de datos el registro seleccionado
     * 
     * @param evt 
     */
    private void contEliminarUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contEliminarUsuariosMouseClicked
        Object valorPrimeraColumna = null;
        
        int selectedRow = tablaUsuarios.getSelectedRow();
        if (selectedRow != -1) {
            valorPrimeraColumna = tablaUsuarios.getModel().getValueAt(selectedRow, 0);

            // Ahora 'valorPrimeraColumna' contiene el dato de la primera columna de la fila seleccionada.
            // Puedes hacer lo que necesites con este valor.
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
        String sentenciasql = "DELETE FROM usuarios WHERE id_usuario='" + valorPrimeraColumna + "';";
        Object[] opciones = {"Sí", "No"};
        
        if (JOptionPane.showOptionDialog(null, "¿Está seguro de que desea eliminar el registro?", "Eliminar registro", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]) == 0) {
            try {
                PreparedStatement ps = cn.prepareStatement(sentenciasql);
                int index = ps.executeUpdate();
                
                if (index > 0) {
                    cargarDatosTablaDescuentos("");
                    limpiarCamposDescuentos();
                } else {
                    JOptionPane.showMessageDialog(null, "No seleccionó fila", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar los datos",  "Error", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(null, e,  "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("ERROR AL ELIMINAR LOS DATOS: " + e);
            }
        }
    }//GEN-LAST:event_contEliminarUsuariosMouseClicked

    /**
     * Método invocado cuando se escribe en el campo de entrada de número de teléfono de usuarios.
     * Este método valida que solo se ingresen caracteres numéricos en el campo.
     *
     * @param evt El evento de teclado que desencadenó la llamada a este método.
     */
    private void txtNumeroUsuariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroUsuariosKeyTyped
        me.validarEntero(evt);
    }//GEN-LAST:event_txtNumeroUsuariosKeyTyped

    /**
     * Método invocado cuando se hace clic en una fila de la tabla de usuarios.
     * Este método se encarga de habilitar y deshabilitar los botones correspondientes,
     * y de cargar los datos de la fila seleccionada en los campos de entrada.
     *
     * @param evt El evento del mouse que desencadenó la llamada a este método.
     */
    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        mbtn.habilitarBotonDefault(contActualizarUsuarios, lblActualizarUsuarios);
        mbtn.habilitarBoton(contEliminarUsuarios, lblEliminarUsuarios, mbtn.getDefaultButtonWarning(), mbtn.getDefaultText());
        mbtn.deshabilitarBotonDefault(contRegistrarUsuarios, lblRegistrarUsuarios);
        
        
        int fila = this.tablaUsuarios.getSelectedRow();
        
        txtUserNameUsuarios.setText(tablaUsuarios.getValueAt(fila, 1).toString());
        txtClaveUsuarios.setText(tablaUsuarios.getValueAt(fila, 1) != null ? new ConsultasSQL(cn).obtenerClaveUsuario(tablaUsuarios.getValueAt(fila, 1).toString()) : "");
        txtNombreUsuarios.setText(tablaUsuarios.getValueAt(fila, 2) != null ? tablaUsuarios.getValueAt(fila, 2).toString() : "");
        txtEmailUsuarios.setText(tablaUsuarios.getValueAt(fila, 3) != null ? tablaUsuarios.getValueAt(fila, 3).toString() : "");
        comboNivelAccesoUsuarios.setSelectedItem(tablaUsuarios.getValueAt(fila, 4) != null ? tablaUsuarios.getValueAt(fila, 4).toString() : "");
        txtNumeroUsuarios.setText(tablaUsuarios.getValueAt(fila, 6) != null ? tablaUsuarios.getValueAt(fila, 6).toString() : "");
        comboEstadoCuentaUsuarios.setSelectedItem(tablaUsuarios.getValueAt(fila, 7) != null ? tablaUsuarios.getValueAt(fila, 7).toString() : "");
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    /**
     * Método invocado cuando se escribe en el campo de búsqueda de usuarios.
     * Este método carga los datos de la tabla de usuarios según la búsqueda realizada.
     *
     * @param evt El evento de teclado que desencadenó la llamada a este método.
     */
    private void txtBuscarUsuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarUsuariosKeyReleased
        cargarDatosTablaUsuarios(txtBuscarUsuarios.getText());
    }//GEN-LAST:event_txtBuscarUsuariosKeyReleased
    
    // Metodos de la tabla de la ventana
    
    /**
     * Carga los datos de productos en la tabla de visualización según los criterios de búsqueda especificados.
     *
     * @param busqueda Cadena de búsqueda para filtrar los productos a mostrar.
     */
    private void cargarDatosTablaUsuarios(String busqueda) {
        
        DefaultTableModel modelo = new TablaNoEditable();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre de Usuario");
        modelo.addColumn("Nombre Completo");
        modelo.addColumn("Correo Electrónico");
        modelo.addColumn("Nivel de Acceso");
        modelo.addColumn("Fecha de Registro");
        modelo.addColumn("Número de Teléfono");
        modelo.addColumn("Estado de la Cuenta");
        
        tablaUsuarios.setModel(modelo);
        tablaUsuarios.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
        String consultasql = mb.obtenerConsulta( "usuarios", "nombre_usuario", "LIKE UPPER('%" + busqueda + "%')", "ASC;");
        System.out.println(consultasql);
        
        String data[] = new String[8];
        
        Statement st;
        
        try
        {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consultasql);
            
            while (rs.next())
            {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(4);
                data[3] = rs.getString(5);
                data[4] = rs.getString(6);
                data[5] = rs.getString(7);
                data[6] = rs.getString(8);
                data[7] = rs.getString(9);
                modelo.addRow(data);
            }
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos.",  "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, e,  "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error al mostrar los datos: " + e);
        }
    }
   
    /**
     * Limpia los campos del formulario de productos y restablece sus valores predeterminados.
     */
    private void limpiarCamposUsuarios() {
        mbtn.deshabilitarBoton(contEliminarUsuarios, lblEliminarUsuarios, mbtn.getDefaultButtonWarningDisabled(), mbtn.getDefaultTextDisabled());
        mbtn.deshabilitarBotonDefault(contActualizarUsuarios, lblActualizarUsuarios);
        mbtn.habilitarBotonDefault(contRegistrarUsuarios, lblRegistrarUsuarios);
        
        mtf.reiniciarTexto(txtUserNameUsuarios, "Nombre de Usuario");
        mtf.reiniciarTexto(txtClaveUsuarios, "**********");
        mtf.reiniciarTexto(txtNombreUsuarios, "Nombre Completo");
        mtf.reiniciarTexto(txtEmailUsuarios, "Correo electrónico");
        
        comboNivelAccesoUsuarios.setSelectedIndex(0);
        
        mtf.reiniciarTexto(txtNumeroUsuarios, "");
        
        comboEstadoCuentaUsuarios.setSelectedIndex(0);
        
        mtf.reiniciarTexto(txtBuscarUsuarios, "Buscar Usuario");
    }
    
    public void configurarVentanaUsuarios() {
        limpiarCamposUsuarios();
        cargarDatosTablaUsuarios("");
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Métodos de la pestaña de Descuentos">
    
    // FocusListeners para establecer un texto predeterminado en los campos de la ventana
    private void txtNombreDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtNombreDescuentos, "Nombre");
    }//GEN-LAST:event_txtNombreDescuentosFocusGained

    private void txtCodigoDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtCodigoDescuentos, "Código");
    }//GEN-LAST:event_txtCodigoDescuentosFocusGained

    private void txtPorcentajeDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPorcentajeDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtPorcentajeDescuentos, "Porcentaje");
    }//GEN-LAST:event_txtPorcentajeDescuentosFocusGained

    private void txtValorDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtValorDescuentos, "Valor");
    }//GEN-LAST:event_txtValorDescuentosFocusGained

    private void txtFechaInicioDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaInicioDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtFechaInicioDescuentos, "Fecha de Inicio");
        txtFechaInicioDescuentos.setCaretPosition(0);
    }//GEN-LAST:event_txtFechaInicioDescuentosFocusGained

    private void txtFechaFinDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaFinDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtFechaFinDescuentos, "Fecha de Fin");
        txtFechaInicioDescuentos.setCaretPosition(0);
    }//GEN-LAST:event_txtFechaFinDescuentosFocusGained

    // Animaciones para los botones de la ventana
    private void contRegistrarDescuentosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarDescuentosMouseEntered
        if (!contRegistrarDescuentos.isEnabled() || !lblRegistrarDescuentos.isEnabled()) {return;}
        contRegistrarDescuentos.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_contRegistrarDescuentosMouseEntered

    private void contRegistrarDescuentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarDescuentosMouseExited
        if (!contRegistrarDescuentos.isEnabled() || !lblRegistrarDescuentos.isEnabled()) {return;}
        contRegistrarDescuentos.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_contRegistrarDescuentosMouseExited

    private void contActualizarDescuentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarDescuentosMouseExited
        if (!contActualizarDescuentos.isEnabled() || !lblActualizarDescuentos.isEnabled()) {return;}
        contActualizarDescuentos.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_contActualizarDescuentosMouseExited

    /**
     * Maneja el evento de clic en el botón "Registrar" en la interfaz de descuentos.
     * Este método realiza el proceso de registrar un nuevo descuento en la base de datos,
     * utilizando los datos proporcionados por el usuario. Antes de realizar el registro,
     * se realizan validaciones para asegurarse de que los datos sean correctos y completos.
     * Si alguna validación falla, se muestra un mensaje de error al usuario.
     * 
     * @param evt El evento de clic del mouse.
     */
    private void contRegistrarDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contRegistrarDescuentosMouseClicked
        if (!contRegistrarDescuentos.isEnabled() || !lblRegistrarDescuentos.isEnabled()) {
            return;
        }

        String nombreDescuento = txtNombreDescuentos.getText();
        String codigoDescuento = txtCodigoDescuentos.getText();
        String stringPorcentajeDescuento = txtPorcentajeDescuentos.getText();
        String stringValorDescuento = txtValorDescuentos.getText();
        String stringFechaInicio = txtFechaInicioDescuentos.getText();
        String stringFechaFin = txtFechaFinDescuentos.getText();
        String activo = (String) comboActivoDescuentos.getSelectedItem();

        java.sql.Date fechaInicioSQL;
        java.sql.Date fechaFinSQL;

        try {
            // Convertir String de fecha a objetos java.util.Date
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date fechaInicio = dateFormat.parse(stringFechaInicio);
            java.util.Date fechaFin = dateFormat.parse(stringFechaFin);

            // Convertir las fechas a java.sql.Date
            fechaInicioSQL = new java.sql.Date(fechaInicio.getTime());
            fechaFinSQL = new java.sql.Date(fechaFin.getTime());

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error en el formato de fecha", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (mv.validarDatos(nombreDescuento, "Nombre", "nombre de descuento") ||
            mv.validarDatos(codigoDescuento, "Código", "código de descuento") ||
            mv.validarComboBox(activo, "activo") ||
            mv.validarFecha(fechaInicioSQL, "fecha de inicio") ||
            mv.validarFecha(fechaFinSQL, "fecha de fin")) {
            return;
        }

        float porcentajeDescuento = 0;
        float valorDescuento = 0;

        String sentenciasql = "INSERT INTO descuentos"
                + "(nombre_descuento, "
                + "codigo_descuento, "
                + "porcentaje_descuento, "
                + "valor_descuento, "
                + "fecha_inicio, "
                + "fecha_fin, "
                + "activo) "
                + "VALUES (?, ?, ?, ?, ?, ?, ?);";

        // Si stringPorcentajeDescuento no está vacío, intenta convertirlo a float
        if (!stringPorcentajeDescuento.isEmpty()) {
            try {
                porcentajeDescuento = Float.parseFloat(stringPorcentajeDescuento);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Porcentaje de descuento inválido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (!stringValorDescuento.isEmpty()) {
            // Si stringValorDescuento no está vacío, intenta convertirlo a float
            try {
                valorDescuento = Float.parseFloat(stringValorDescuento);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Valor de descuento inválido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese porcentaje o valor de descuento", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            PreparedStatement ps = cn.prepareStatement(sentenciasql);

            ps.setString(1, nombreDescuento);
            ps.setString(2, codigoDescuento);
            ps.setFloat(3, porcentajeDescuento);
            ps.setFloat(4, valorDescuento);
            ps.setDate(5, fechaInicioSQL);
            ps.setDate(6, fechaFinSQL);
            ps.setString(7, activo);

            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Datos guardados correctamente");

            cargarDatosTablaDescuentos("");
            limpiarCamposDescuentos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_contRegistrarDescuentosMouseClicked

    /**
    * Maneja el evento de clic en el botón "Actualizar" en la interfaz de descuentos.
    * Este método se encarga de actualizar un registro de descuento en la base de datos
    * con los nuevos datos proporcionados por el usuario, después de realizar las validaciones necesarias.
    * 
    * @param evt El evento de clic del mouse.
    */
    private void contActualizarDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarDescuentosMouseClicked
        if (!contActualizarDescuentos.isEnabled() || !lblActualizarDescuentos.isEnabled()) {
            return;
        }

        String nombreDescuento = txtNombreDescuentos.getText();
        String codigoDescuento = txtCodigoDescuentos.getText();
        String stringPorcentajeDescuento = txtPorcentajeDescuentos.getText();
        String stringValorDescuento = txtValorDescuentos.getText();
        String stringFechaInicio = txtFechaInicioDescuentos.getText();
        String stringFechaFin = txtFechaFinDescuentos.getText();
        String activo = (String) comboActivoDescuentos.getSelectedItem();

        java.sql.Date fechaInicioSQL;
        java.sql.Date fechaFinSQL;

        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date fechaInicio = dateFormat.parse(stringFechaInicio);
            java.util.Date fechaFin = dateFormat.parse(stringFechaFin);

            fechaInicioSQL = new java.sql.Date(fechaInicio.getTime());
            fechaFinSQL = new java.sql.Date(fechaFin.getTime());

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error en el formato de fecha", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (mv.validarDatos(nombreDescuento, "Nombre", "nombre de descuento") ||
            mv.validarDatos(codigoDescuento, "Código", "código de descuento") ||
            mv.validarComboBox(activo, "activo") ||
            mv.validarFecha(fechaInicioSQL, "fecha de inicio") ||
            mv.validarFecha(fechaFinSQL, "fecha de fin")) {
            return;
        }

        float porcentajeDescuento = 0;
        float valorDescuento = 0;

        String sentenciasql = "UPDATE descuentos SET "
                + "nombre_descuento = ?, "
                + "codigo_descuento = ?, "
                + "porcentaje_descuento = ?, "
                + "valor_descuento = ?, "
                + "fecha_inicio = ?, "
                + "fecha_fin = ?, "
                + "activo = ? "
                + "WHERE id_descuento = ?;";

        // Si stringPorcentajeDescuento no está vacío, intenta convertirlo a float
        if (!stringPorcentajeDescuento.isEmpty()) {
            try {
                porcentajeDescuento = Float.parseFloat(stringPorcentajeDescuento);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Porcentaje de descuento inválido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (!stringValorDescuento.isEmpty()) {
            // Si stringValorDescuento no está vacío, intenta convertirlo a float
            try {
                valorDescuento = Float.parseFloat(stringValorDescuento);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Valor de descuento inválido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        try {
            PreparedStatement ps = cn.prepareStatement(sentenciasql);

            ps.setString(1, nombreDescuento);
            ps.setString(2, codigoDescuento);
            ps.setFloat(3, porcentajeDescuento);
            ps.setFloat(4, valorDescuento);
            ps.setDate(5, fechaInicioSQL);
            ps.setDate(6, fechaFinSQL);
            ps.setString(7, activo);
            ps.setInt(8, tablaUsuarios.getSelectedRow()); // Cambiar 'tablaUsuarios' al nombre correcto de tu tabla

            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Datos actualizados correctamente");

            cargarDatosTablaDescuentos("");
            limpiarCamposDescuentos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_contActualizarDescuentosMouseClicked

    /**
    * Maneja el evento de clic en el enlace "Cancelar" en la interfaz de descuentos,
    * y limpia los campos relacionados con descuentos.
    * 
    * @param evt El evento de clic del mouse.
    */
    private void lblCancelarDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarDescuentosMouseClicked
        limpiarCamposDescuentos();
    }//GEN-LAST:event_lblCancelarDescuentosMouseClicked

    /**
     * Maneja el evento de clic en el enlace "Eliminar" en la interfaz de descuentos,
     * eliminando el registro seleccionado si el usuario confirma la acción.
     * 
     * @param evt El evento de clic del mouse.
     */
    private void lblEliminarDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEliminarDescuentosMouseClicked
        String sentenciasql = "DELETE FROM descuentos WHERE id_descuento='" + tablaDescuentos.getValueAt(tablaDescuentos.getSelectedRow(), 0) + "';";
        Object[] opciones = {"Sí", "No"};

        if (JOptionPane.showOptionDialog(null, "¿Está seguro de que desea eliminar el registro?", "Eliminar registro", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]) == 0) {
            try {
                PreparedStatement ps = cn.prepareStatement(sentenciasql);
                int index = ps.executeUpdate();

                if (index > 0) {
                    cargarDatosTablaUsuarios("");
                    limpiarCamposDescuentos();
                } else {
                    JOptionPane.showMessageDialog(null, "No seleccionó fila", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar los datos",  "Error", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(null, e,  "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("ERROR AL ELIMINAR LOS DATOS: " + e);
            }
        }
    }//GEN-LAST:event_lblEliminarDescuentosMouseClicked
    
    // Solo permite que se ingresen datos numéricos al campo
    private void txtPorcentajeDescuentosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeDescuentosKeyTyped
        me.validarEntero(evt);
    }//GEN-LAST:event_txtPorcentajeDescuentosKeyTyped

    // Solo permite que se ingresen datos numéricos al campo
    private void txtValorDescuentosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorDescuentosKeyTyped
        me.validarEntero(evt);
    }//GEN-LAST:event_txtValorDescuentosKeyTyped

    private void tablaDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDescuentosMouseClicked
        mbtn.habilitarBotonDefault(contActualizarDescuentos, lblActualizarDescuentos);
        mbtn.habilitarBoton(contEliminarDescuentos, lblEliminarDescuentos, mbtn.getDefaultButtonWarning(), mbtn.getDefaultText());
        mbtn.deshabilitarBotonDefault(contRegistrarDescuentos, lblRegistrarDescuentos);
        
        int fila = this.tablaDescuentos.getSelectedRow();
        
        txtNombreDescuentos.setText(tablaDescuentos.getValueAt(fila, 1).toString());
        txtCodigoDescuentos.setText(tablaDescuentos.getValueAt(fila, 2) != null ? tablaDescuentos.getValueAt(fila, 2).toString() : "");
        txtPorcentajeDescuentos.setText(tablaDescuentos.getValueAt(fila, 3) != null ? tablaDescuentos.getValueAt(fila, 3).toString() : "");
        txtValorDescuentos.setText(tablaDescuentos.getValueAt(fila, 4) != null ? tablaDescuentos.getValueAt(fila, 4).toString() : "");
        txtFechaInicioDescuentos.setText(tablaDescuentos.getValueAt(fila, 5) != null ? tablaDescuentos.getValueAt(fila, 5).toString() : "");
        txtFechaFinDescuentos.setText(tablaDescuentos.getValueAt(fila, 6) != null ? tablaDescuentos.getValueAt(fila, 6).toString() : "");
        comboActivoDescuentos.setSelectedItem(tablaDescuentos.getValueAt(fila, 7) != null ? tablaDescuentos.getValueAt(fila, 7).toString() : "");
    }//GEN-LAST:event_tablaDescuentosMouseClicked

    // Reinicia el campo de texto de buscar si se encuentra vacío al momento de deseleccionarlo
    private void txtBuscarDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarDescuentosFocusGained
        mtf.establecerTextoPredeterminado(txtBuscarDescuentos, "Buscar");
    }//GEN-LAST:event_txtBuscarDescuentosFocusGained
    
    // Maneja el evento de buscar en la tabla de descuentos por nombre
    private void txtBuscarDescuentosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDescuentosKeyReleased
        cargarDatosTablaDescuentos(txtBuscarDescuentos.getText());
    }//GEN-LAST:event_txtBuscarDescuentosKeyReleased

    // Más animaciones de los botones
    private void contActualizarDescuentosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contActualizarDescuentosMouseEntered
        if (!contActualizarDescuentos.isEnabled() || !lblActualizarDescuentos.isEnabled()) {return;}
        contActualizarDescuentos.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_contActualizarDescuentosMouseEntered

    private void lblEliminarDescuentosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEliminarDescuentosMouseEntered
        if (!contEliminarDescuentos.isEnabled() || !lblEliminarDescuentos.isEnabled()) {return;}
        contEliminarDescuentos.setBackground(mbtn.getDefaultButtonWarningHover());
    }//GEN-LAST:event_lblEliminarDescuentosMouseEntered

    private void lblEliminarDescuentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEliminarDescuentosMouseExited
        if (!contEliminarDescuentos.isEnabled() || !lblEliminarDescuentos.isEnabled()) {return;}
        contEliminarDescuentos.setBackground(mbtn.getDefaultButtonWarning());
    }//GEN-LAST:event_lblEliminarDescuentosMouseExited

    private void lblCancelarDescuentosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarDescuentosMouseEntered
       contCancelarDescuentos.setBackground(mbtn.getDefaultButtonHover());
    }//GEN-LAST:event_lblCancelarDescuentosMouseEntered

    private void lblCancelarDescuentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarDescuentosMouseExited
        contCancelarDescuentos.setBackground(mbtn.getDefaultButton());
    }//GEN-LAST:event_lblCancelarDescuentosMouseExited

    /**
     * Carga los datos de descuentos desde la base de datos y los muestra en la tabla de la interfaz.
     * 
     * @param busqueda El término de búsqueda opcional para filtrar los resultados.
     */
    private void cargarDatosTablaDescuentos(String busqueda) {
        DefaultTableModel modelo = new TablaNoEditable();
        modelo.addColumn("ID Descuento");
        modelo.addColumn("Nombre de Descuento");
        modelo.addColumn("Código de Descuento");
        modelo.addColumn("Porcentaje de Descuento");
        modelo.addColumn("Valor de Descuento");
        modelo.addColumn("Fecha de Inicio");
        modelo.addColumn("Fecha de Fin");
        modelo.addColumn("Activo");

        tablaDescuentos.setModel(modelo);
        tablaDescuentos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        String consultasql = mb.obtenerConsulta("descuentos", "nombre_descuento", "LIKE UPPER('%" + busqueda + "%')", "ASC;");
        System.out.println(consultasql);

        String data[] = new String[8];

        Statement st;

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consultasql);

            while (rs.next()) {
                data[0] = rs.getString("id_descuento");
                data[1] = rs.getString("nombre_descuento");
                data[2] = rs.getString("codigo_descuento");
                data[3] = rs.getString("porcentaje_descuento");
                data[4] = rs.getString("valor_descuento");
                data[5] = rs.getString("fecha_inicio");
                data[6] = rs.getString("fecha_fin");
                data[7] = rs.getString("activo");
                modelo.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos.",  "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, e,  "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error al mostrar los datos: " + e);
        }
    }
    
    /**
     * Limpia los campos en la interfaz de descuentos y restablece los valores por defecto.
     */
    private void limpiarCamposDescuentos() {
        mbtn.deshabilitarBoton(contEliminarDescuentos, lblEliminarDescuentos, mbtn.getDefaultButtonWarningDisabled(), mbtn.getDefaultTextDisabled());
        mbtn.deshabilitarBotonDefault(contActualizarDescuentos, lblActualizarDescuentos);
        mbtn.habilitarBotonDefault(contRegistrarDescuentos, lblRegistrarDescuentos);
        
        mtf.reiniciarTexto(txtNombreDescuentos, "Nombre");
        mtf.reiniciarTexto(txtCodigoDescuentos, "Código");
        mtf.reiniciarTexto(txtPorcentajeDescuentos, "Porcentaje");
        mtf.reiniciarTexto(txtValorDescuentos, "Valor");
        
        mtf.reiniciarTexto(txtFechaInicioDescuentos, "");
        mtf.reiniciarTexto(txtFechaFinDescuentos, "");
        
        comboActivoDescuentos.setSelectedIndex(0);
        
        mtf.reiniciarTexto(txtBuscarDescuentos, "Buscar");
        cargarDatosTablaDescuentos("");
    }

    /**
    * Configura la ventana de descuentos restableciendo los campos y cargando los datos en la tabla.
    */
    private void configurarVentanaDescuentos() {
        limpiarCamposDescuentos();
        cargarDatosTablaDescuentos("");
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Métodos de la pestaña de Informes">
    
    /**
     * Este método se ejecuta cuando se selecciona una opción en el combo de tipo de informes.
     * Dependiendo de la opción seleccionada, habilita o deshabilita los combos de período, año y mes.
     * 
     * @param evt El evento que desencadenó esta acción.
     */
    private void comboTipoInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoInformesActionPerformed
        String opcionSeleccionada = comboTipoInformes.getSelectedItem().toString();
        
        if (!opcionSeleccionada.equals("Tipo de Informe")) {
            comboPeriodoInformes.setEnabled(true);
        } else {
            comboPeriodoInformes.setEnabled(false);
            comboPeriodoInformes.setSelectedIndex(0);
            
            comboYearInformes.setEnabled(false);
            comboYearInformes.setSelectedIndex(0);
            
            comboMonthInformes.setEnabled(false);
            comboMonthInformes.setSelectedIndex(0); 
        }
    }//GEN-LAST:event_comboTipoInformesActionPerformed
    
    /**
     * Este método se ejecuta cuando se selecciona una opción en el combo de período de informes.
     * Dependiendo de la opción seleccionada, habilita o deshabilita los combos de año y mes, y realiza consultas si es necesario.
     * @param evt El evento que desencadenó esta acción.
     */
    private void comboPeriodoInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPeriodoInformesActionPerformed
        String opcionSeleccionada = comboPeriodoInformes.getSelectedItem().toString();
        String yearSeleccionado = comboYearInformes.getSelectedItem().toString();
        String monthSeleccionado = comboMonthInformes.getSelectedItem().toString();
        String periodoSeleccionado = comboPeriodoInformes.getSelectedItem().toString();
        
        switch (opcionSeleccionada) {
            case "Periodo del Informe":
                comboYearInformes.setEnabled(false);
                comboYearInformes.setSelectedIndex(0);
                comboMonthInformes.setEnabled(false);
                comboMonthInformes.setSelectedIndex(0); 
                break;
            case "Anual":
                comboYearInformes.setEnabled(true);
                comboMonthInformes.setEnabled(false);
                comboMonthInformes.setSelectedIndex(0); 
                
                if (!yearSeleccionado.equals("Año") && periodoSeleccionado.equals("Anual")) {
                    consultaInformeInventarioAnual(yearSeleccionado);
                }
                    
                break;
            case "Mensual":
                comboYearInformes.setEnabled(true);
                comboMonthInformes.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_comboPeriodoInformesActionPerformed
    
    /**
     * Este método se ejecuta cuando se selecciona una opción en el combo de año de informes.
     * Realiza una consulta del informe anual si se selecciona un año válido y la opción es "Anual".
     * @param evt El evento que desencadenó esta acción.
     */
    private void comboYearInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboYearInformesActionPerformed
        String yearSeleccionado = comboYearInformes.getSelectedItem().toString();
        String periodoSeleccionado = comboPeriodoInformes.getSelectedItem().toString();
        
        if (!yearSeleccionado.equals("Año") && periodoSeleccionado.equals("Anual")) {
            consultaInformeInventarioAnual(yearSeleccionado);
        }
    }//GEN-LAST:event_comboYearInformesActionPerformed
    
    /**
     * Este método se ejecuta cuando se selecciona una opción en el combo de mes de informes.
     * Realiza una consulta del informe mensual si se selecciona un año válido, un mes válido y la opción es "Mensual".
     * @param evt El evento que desencadenó esta acción.
     */
    private void comboMonthInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonthInformesActionPerformed
        String yearSeleccionado = comboYearInformes.getSelectedItem().toString();
        String monthSeleccionado = comboMonthInformes.getSelectedItem().toString();
        String periodoSeleccionado = comboPeriodoInformes.getSelectedItem().toString();
        
        if (!yearSeleccionado.equals("Año") && !monthSeleccionado.equals("Mes") && periodoSeleccionado.equals("Mensual")) {
            consultaInformeInventarioMensual(yearSeleccionado, obtenerNumeroMes(monthSeleccionado));
        }
    }//GEN-LAST:event_comboMonthInformesActionPerformed

    /**
     * Realiza una consulta del informe de inventario mensual para un año y mes específicos y muestra los resultados en una tabla.
     * 
     * @param year El año para el cual se desea obtener el informe de inventario mensual.
     * @param month El mes para el cual se desea obtener el informe de inventario mensual.
     */
    private void consultaInformeInventarioMensual(String year, String month) {
        DefaultTableModel modelo = new TablaNoEditable();
        
        modelo.addColumn("Año");
        modelo.addColumn("Mes");
        modelo.addColumn("Categoría");
        modelo.addColumn("Productos de esta Categoría");
        modelo.addColumn("Cantidad Total Disponible");
        modelo.addColumn("Valor en el Inventario");
        
        tablaInformes.setModel(modelo);
        tablaInformes.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
        String datos[] = new String[6];
        
        String consultasql = "SELECT * FROM informe_inventario WHERE year = ? AND month = ?";
        
        System.out.println(consultasql);
        
        try {
            PreparedStatement st = cn.prepareStatement(consultasql);
            
            st.setString(1, year);
            st.setString(2, month);
            
            ResultSet rs = st.executeQuery();
            
            while (rs.next()) {
                datos[0] = rs.getString("year");
                datos[1] = rs.getString("month");
                datos[2] = rs.getString("categoria");
                datos[3] = rs.getString("total_productos");
                datos[4] = rs.getString("total_cantidad_disponible");
                datos[5] = rs.getString("valor_inventario");
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar datos", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error: ", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Realiza una consulta del informe de inventario anual para un año específico y muestra los resultados en una tabla.
     * @param year El año para el cual se desea obtener el informe de inventario anual.
     */
    private void consultaInformeInventarioAnual(String year) {
        DefaultTableModel modelo = new TablaNoEditable();
        
        modelo.addColumn("Año");
        modelo.addColumn("Categoría");
        modelo.addColumn("Productos de esta Categoría");
        modelo.addColumn("Cantidad Total Disponible");
        modelo.addColumn("Valor en el Inventario");
        
        tablaInformes.setModel(modelo);
        tablaInformes.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
        String datos[] = new String[5];
        
        String consultasql = "SELECT * FROM informe_inventario WHERE year = ?";
        
        System.out.println(consultasql);
        
        try {
            PreparedStatement st = cn.prepareStatement(consultasql);
            
            st.setString(1, year);
            
            ResultSet rs = st.executeQuery();
            
            while (rs.next()) {
                datos[0] = rs.getString("year");
                datos[1] = rs.getString("categoria");
                datos[2] = rs.getString("total_productos");
                datos[3] = rs.getString("total_cantidad_disponible");
                datos[4] = rs.getString("valor_inventario");
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar datos", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, ex, "Error: ", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * 
     */
    private void consultaInformeVentasMensual() {
        
    }
    
    /**
     * 
     */
    private void consultaInformeVentasAnual() {
        
    }
    
    /**
     * Obtiene el número de mes correspondiente al nombre del mes dado.
     * @param mes El nombre del mes en español (Enero, Febrero, etc.).
     * @return El número del mes en formato de dos dígitos (01, 02, ..., 12).
     *                Retorna "-1" si el nombre del mes no es válido.
     */
    private String obtenerNumeroMes(String mes) {
        switch (mes) {
            case "Enero": return "01";
            case "Febrero": return "02";
            case "Marzo": return "03";
            case "Abril": return "04";
            case "Mayo": return "05";
            case "Junio": return "06";
            case "Julio": return "07";
            case "Agosto": return "08";
            case "Septiembre": return "09";
            case "Octubre": return "10";
            case "Noviembre": return "11";
            case "Diciembre": return "12";
            default: return "-1";
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Declaracion de variables de los componentes">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraLateral;
    private javax.swing.JPanel barraTitulo;
    private javax.swing.JPanel botonDescuentos;
    private javax.swing.JPanel botonInformes;
    private javax.swing.JPanel botonProductos;
    private javax.swing.JPanel botonUsuarios;
    private javax.swing.JPanel botonVentas;
    private javax.swing.JPanel botonesBarraTitulo;
    private javax.swing.JMenuItem btnEliminarProductos;
    private javax.swing.JComboBox<String> comboActivoDescuentos;
    private javax.swing.JComboBox<String> comboBuscarPorProductos;
    private javax.swing.JComboBox<String> comboEstadoCuentaUsuarios;
    private javax.swing.JComboBox<String> comboMonthInformes;
    private javax.swing.JComboBox<String> comboNivelAccesoUsuarios;
    private javax.swing.JComboBox<String> comboOrdenarProductos;
    private javax.swing.JComboBox<String> comboPeriodoInformes;
    private javax.swing.JComboBox<String> comboTipoBusquedaProductos;
    private javax.swing.JComboBox<String> comboTipoInformes;
    private javax.swing.JComboBox<String> comboYearInformes;
    private javax.swing.JPanel contActualizarDescuentos;
    private javax.swing.JPanel contActualizarUsuarios;
    private javax.swing.JPanel contBarraLateral;
    private javax.swing.JPanel contBotonBarraLateral;
    private javax.swing.JPanel contCancelarDescuentos;
    private javax.swing.JPanel contCancelarUsuarios;
    private javax.swing.JPanel contCerrar;
    private javax.swing.JPanel contCerrarSesion;
    private javax.swing.JPanel contConfiguracion;
    private javax.swing.JPanel contEliminarDescuentos;
    private javax.swing.JPanel contEliminarUsuarios;
    private javax.swing.JPanel contMaximizar;
    private javax.swing.JPanel contOcultar;
    private javax.swing.JPanel contRegistrarDescuentos;
    private javax.swing.JPanel contRegistrarUsuarios;
    private javax.swing.JLabel iconoDescuentos;
    private javax.swing.JLabel iconoInformes;
    private javax.swing.JLabel iconoProductos;
    private javax.swing.JLabel iconoUsuarios;
    private javax.swing.JLabel iconoVentas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel labelDescuentos;
    private javax.swing.JLabel labelInformes;
    private javax.swing.JLabel labelProductos;
    private javax.swing.JLabel labelUsuarios;
    private javax.swing.JLabel labelVentas;
    private javax.swing.JLabel lblActualizarDescuentos;
    private javax.swing.JLabel lblActualizarUsuarios;
    private javax.swing.JLabel lblBotonBarraLateral;
    private javax.swing.JLabel lblCancelarDescuentos;
    private javax.swing.JLabel lblCancelarUsuarios;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblCerrarSesion;
    private javax.swing.JLabel lblConfiguracion;
    private javax.swing.JLabel lblEliminarDescuentos;
    private javax.swing.JLabel lblEliminarUsuarios;
    private javax.swing.JLabel lblMaximizar;
    private javax.swing.JLabel lblOcultar;
    private javax.swing.JLabel lblRegistrarDescuentos;
    private javax.swing.JLabel lblRegistrarUsuarios;
    private javax.swing.JPopupMenu menuClickDerechoProductos;
    private javax.swing.JLayeredPane panelBarraLateral;
    private javax.swing.JLayeredPane panelDescuentos;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JLayeredPane panelInformes;
    private javax.swing.JLayeredPane panelMenuPrincipal;
    private javax.swing.JLayeredPane panelProductos;
    private javax.swing.JLayeredPane panelUsuarios;
    private javax.swing.JPanel panelVentana;
    private javax.swing.JPanel panelVentanaPaneles;
    private javax.swing.JLayeredPane panelVentas;
    private javax.swing.JTable tablaDescuentos;
    private javax.swing.JTable tablaInformes;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtBuscarDescuentos;
    private javax.swing.JTextField txtBuscarProductos;
    private javax.swing.JTextField txtBuscarUsuarios;
    private javax.swing.JPasswordField txtClaveUsuarios;
    private javax.swing.JTextField txtCodigoDescuentos;
    private javax.swing.JTextField txtEmailUsuarios;
    private javax.swing.JFormattedTextField txtFechaFinDescuentos;
    private javax.swing.JFormattedTextField txtFechaInicioDescuentos;
    private javax.swing.JTextField txtNombreDescuentos;
    private javax.swing.JTextField txtNombreUsuarios;
    private javax.swing.JFormattedTextField txtNumeroUsuarios;
    private javax.swing.JTextField txtPorcentajeDescuentos;
    private javax.swing.JLabel txtTitulo;
    private javax.swing.JTextField txtUserNameUsuarios;
    private javax.swing.JTextField txtValorDescuentos;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
